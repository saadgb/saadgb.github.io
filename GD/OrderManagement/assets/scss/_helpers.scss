@charset "UTF-8";

//* Colors */
$color-white:            #fff;
$color-black:            #394240;
$color-green:            #10c4b2;
$color-green-2:          #24c6db;
$color-light-green:      #e0f7fa;
$color-grey:             #888;
$color-grey-2:           #ddd;
$color-grey-3:           #e0e3e5;
$color-grey-4:           #f0f3f5;
$color-grey-5:           #f5f6f6;
$color-grey-6:           #999;
$color-orange:           #ff4350;
$color-orange-hover:     #e43c48;
$color-blue:             #303553;
$color-blue-2:           #107cc4;
$color-blue-3:           #00acc1;
$color-blue-4:           #0095a8;
$color-blue-5:           #80deea;
$color-dark-blue:        #1C2030;
$order-pending-status:	 #cccccc;
$order-cancel-status:	 #ff9800;
$order-error:			 #ff4350;
$nova-red:				 #e53c48;
$nova-theme-red:		 #ff4350;
$warning-yellow:		 #ffe082;
$warning-yellow-text:	 #675010;

$color-icon-green:       #4cb74c;
$color-icon-red:         #ff4350;
$color-icon-orange:      #eb9528;

$color-yellow:           #ffecc7;
$color-yellow-dark:      #ffbd3d;

$color-text:                #333;
$color-text-light:          $color-grey;
$color-head:                $color-orange;
//$color-head-sec:          $color-blue-2;
$color-bg-dark:             $color-dark-blue;
$color-bg-progress:         $color-grey-3;
$color-bg-misc:             $color-grey-4;
$color-bg-btn-hover:        $color-grey-5;
$color-link:                $color-green;
$color-desc:                $color-grey;
$color-border:              $color-grey-2;
$color-border-dark:         rgba($color-text, 0.25);
$color-access-label-bg:     $color-green;
$color-btn-border:          #9da2a4;
$color-btn-disabled:        #c4c4c4;
$color-btn-disabled-border: #bdc0c1;


// Add percentage of white to a color
@function tint($color, $percent) {
	@return mix(white, $color, $percent);
}
// Add percentage of black to a color
@function shade($color, $percent) {
	@return mix(black, $color, $percent);
}

//* Typography */
$root-font-size-px: 15;
$main-line-ht-px: 24;
$main-line-ht-unitless: ($main-line-ht-px / $root-font-size-px);
$main-line-ht-rem: ($main-line-ht-unitless) + rem;

@mixin font-face($font-name, $font-slug, $weight: normal, $style: normal) {
	@font-face {
		font-family: #{$font-name};
		src: url('type/#{$font-slug}.woff2') format('woff2'),
			 url('type/#{$font-slug}.woff') format('woff'),
			 url('type/#{$font-slug}.ttf') format('truetype');
		font-weight: $weight;
		font-style: $style;
	}
}

$font-sans: FiraSans, Verdana, Arial, sans-serif;
$font-light: 300;
$font-normal: 400;
$font-medium: 500;
$font-bold: 700;

@mixin font-size ($size: $root-font-size-px, $line: $main-line-ht-px, $include-line-ht:true) {
	font-size: ($size / $root-font-size-px) + rem;
	@if $include-line-ht == true { line-height: $line / $size; }
}

@mixin all-smcp() {
    font-feature-settings: 'smcp', 'c2sc';
    letter-spacing: 0.5px;
}

// Convert px to rem
// $size in px
@function px2rem($size) {
	@return $size / $root-font-size-px + rem;
}

// Convert px to em
// $size in px
// $root-size in px
@function px2em($size, $root-size) {
	@return $size / $root-size + em;
}

$bp1: 465px;
$bp2: 377px;
$bp3: 550px;

//* Misc */
// For calculating paddings, margins
// $prop = property = could be margin, padding
// $val is in px
// when $shorthand = false, $val must have all four values...
// but for $shorthand = true, $val can use standard CSS shorthand values
@mixin rem-vals ($prop, $shorthand, $val...) {
	@if $shorthand == true {
		$n: length($val);
		$i: 1;
		$rem-list: ();
		@while $i <= $n {
			@if nth($val, $i) == auto {
				$rem-list: append($rem-list, auto);
			} @else if nth($val, $i) != 0 {
				//$computed: nth($val, $i) / $root-font-size-px + rem;
				$computed: px2rem( nth($val, $i) );
				$rem-list: append($rem-list, $computed);
			} @else {
				$rem-list: append($rem-list, 0);
			}
			$i: $i + 1;
		}
		#{$prop}: $rem-list;
	
	} @else {
		// $shorthand is false
		$t: nth($val, 1);
		$r: nth($val, 2);
		$b: nth($val, 3);
		$l: nth($val, 4);
		
		@if $t != 0 { #{$prop}-top:    px2rem($t); }
		@if $r != 0 { #{$prop}-right:  px2rem($r); }
		@if $b != 0 { #{$prop}-bottom: px2rem($b); }
		@if $l != 0 { #{$prop}-left:   px2rem($l); }
	}
}
